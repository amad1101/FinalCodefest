{"remainingRequest":"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/babel-loader/lib/index.js!/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Diallo/Documents/GitHub/CodefestRob/src/views/ConstructionA.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Diallo/Documents/GitHub/CodefestRob/src/views/ConstructionA.vue","mtime":1557053991328},{"path":"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/cache-loader/dist/cjs.js","mtime":1557053158463},{"path":"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/babel-loader/lib/index.js","mtime":1557053157628},{"path":"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/cache-loader/dist/cjs.js","mtime":1557053158463},{"path":"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/vue-loader/lib/index.js","mtime":1557053166141}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/Diallo/Documents/GitHub/CodefestRob/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport { mapState, mapMutations, mapActions } from 'vuex';\nimport Choice from '@/components/Choice.vue';\nimport Situation from '@/components/Situation.vue';\nexport default {\n  name: 'constructionA',\n  components: {\n    Choice: Choice,\n    Situation: Situation\n  },\n  // data: function () {\n  //   return {\n  //     job2:\n  //   }},\n  computed: _objectSpread({\n    // test() {\n    //   return this.$store.state.job\n    //   return this.$store.state.job\n    // },\n    newTodo: {// get() {\n      //   // return this.$store.state.job\n      //   return this.job2 = this.job\n      //\n      //          // this.$store.state.tracker;\n      // }\n      // set(value) {\n      //   this.$store.commit('setNewTodo', value);\n      // }\n    }\n  }, mapState(['job', 'tracker'])),\n  methods: _objectSpread({}, mapMutations(['allDone', 'getData']), mapActions(['updateTracker', 'returnUpdatedData']))\n};",{"version":3,"sources":["ConstructionA.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA,SAAA,QAAA,EAAA,YAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA;AACA;AACA;AACA;AACA,EAAA,QAAA;AACA;AACA;AACA;AAEA;AACA,IAAA,OAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AANA,KAiBA,QAAA,CAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAjBA,CAVA;AA6BA,EAAA,OAAA,oBACA,YAAA,CAAA,CAAA,SAAA,EAAA,SAAA,CAAA,CADA,EAEA,UAAA,CAAA,CAAA,eAAA,EAAA,mBAAA,CAAA,CAFA;AA7BA,CAAA","sourcesContent":["<template>\n  <div class=\"constructionA\">\n    <Situation :context='job[1].choice[0].Situation' ></Situation>\n    <br>\n    <br>\n    <br>\n    <b-container >\n      <b-row class=\"mb-3\">\n        <!-- <b-col md=\"4\"> -->\n          <Choice :key=\"index\" v-for=\"(number, index) in job[1].choice[0].choice\" :context='number.name'  :propB='number.cost' :propC='number.distance'  :propE='number.choiceName' :propF='number.link'></Choice>\n          <!-- v-for=\"(number, index) in job[1].choice[0].choice[0]\" :key=\"index\" :context='number.name'  :propB='number.cost' :propC='number.distance'  :propE='number.choiceName' -->\n          <!-- propA='' propD='' -->\n          <!-- key: 1, name: 'Construction', cost: \"20/hr\", distance: 20, method: 'Drive', choiceName: 'You need transportation', Situation:'Now You need a transportation mean! Which one would you want ?', -->\n        <!-- </b-col> -->\n      </b-row>\n   </b-container>\n   <!-- <p v-for='(number, index) in job[1].choice[0].choice[0].choice' :key=\"index\">{{number}}</p> -->\n   <!-- Format job[0].choice[0].choice -->\n    <!-- <ul> -->\n    <!-- <p>{{ tracker }}</p> -->\n\n      <!-- <li v-for=\"(job, index) in job\" :key=\"index\"> -->\n        <!-- <input @click=\"toggleTodoDone(index)\" type=\"checkbox\" :checked=\"todo.done\"> -->\n        <!-- <p v-for=\"(number, index) in job\" :key=\"index\">{{number.name}}</p> -->\n      <!-- </li> -->\n    <!-- </ul> -->\n\n\n\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\nimg {\n  max-width: 85%;\n  height: auto;\n  padding-top: 1.5rem;\n}\na{\n  color: #52ae8c;\n  text-decoration: underline;\n}\na:hover {\n  color: #ffffff;\n  -webkit-transition: all 0.2s ease-in-out;\n  -moz-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out;\n}\niframe {\n  width: 75%;\n  height: 50rem;\n}\n</style>\n\n<script>\n// @ is an alias to /src\nimport { mapState, mapMutations, mapActions } from 'vuex';\n import Choice from '@/components/Choice.vue';\nimport Situation from '@/components/Situation.vue';\n\nexport default {\n  name: 'constructionA',\n  components: {\n     Choice,\n    Situation\n  },\n  // data: function () {\n  //   return {\n  //     job2:\n  //   }},\n  computed: {\n    // test() {\n    //   return this.$store.state.job\n    //   return this.$store.state.job\n\n    // },\n    newTodo: {\n      // get() {\n      //   // return this.$store.state.job\n      //   return this.job2 = this.job\n      //\n      //          // this.$store.state.tracker;\n      // }\n      // set(value) {\n      //   this.$store.commit('setNewTodo', value);\n      // }\n    },\n    ...mapState(['job', 'tracker'])\n  },\n  methods: {\n    ...mapMutations(['allDone', 'getData']),\n    ...mapActions(['updateTracker', 'returnUpdatedData' ])\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}